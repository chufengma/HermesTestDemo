__d(function(g,r,i,a,m,e,d){'use strict';var t=(function(t){function s(t){var o;return r(d[1])(this,s),(o=r(d[2])(this,r(d[3])(s).call(this,t)))._isMounted=!0,o.state={randomPhoto:null,measuredSize:null,croppedImageURI:null,cropError:null},o._fetchRandomPhoto(),o}return r(d[0])(s,t),r(d[4])(s,[{key:"_fetchRandomPhoto",value:function(){var t,o,n,s;return r(d[5]).async(function(h){for(;;)switch(h.prev=h.next){case 0:return h.prev=0,h.next=3,r(d[5]).awrap(r(d[6]).CameraRoll.getPhotos({first:20}));case 3:if(t=h.sent,this._isMounted){h.next=6;break}return h.abrupt("return");case 6:o=t.edges,n=o[Math.floor(Math.random()*o.length)],(s=n&&n.node&&n.node.image)&&this.setState({randomPhoto:s}),h.next=15;break;case 12:h.prev=12,h.t0=h.catch(0);case 15:case"end":return h.stop()}},null,this,[[0,12]])}},{key:"componentWillUnmount",value:function(){this._isMounted=!1}},{key:"render",value:function(){var t=this;return this.state.measuredSize?this.state.croppedImageURI?this._renderCroppedImage():this._renderImageCropper():r(d[7]).createElement(r(d[6]).View,{style:n.container,onLayout:function(o){var n=o.nativeEvent.layout.width;n&&t.setState({measuredSize:{width:n,height:n}})}})}},{key:"_renderImageCropper",value:function(){var t=this;if(!this.state.randomPhoto)return r(d[7]).createElement(r(d[6]).View,{style:n.container});var s=null;return this.state.cropError&&(s=r(d[7]).createElement(r(d[6]).Text,null,this.state.cropError.message)),r(d[7]).createElement(r(d[6]).View,{style:n.container},r(d[7]).createElement(r(d[6]).Text,null,"Drag the image within the square to crop:"),r(d[7]).createElement(o,{image:this.state.randomPhoto,size:this.state.measuredSize,style:[n.imageCropper,this.state.measuredSize],onTransformDataChange:function(o){return t._transformData=o}}),r(d[7]).createElement(r(d[6]).TouchableHighlight,{style:n.cropButtonTouchable,onPress:this._crop.bind(this)},r(d[7]).createElement(r(d[6]).View,{style:n.cropButton},r(d[7]).createElement(r(d[6]).Text,{style:n.cropButtonLabel},"Crop"))),s)}},{key:"_renderCroppedImage",value:function(){return r(d[7]).createElement(r(d[6]).View,{style:n.container},r(d[7]).createElement(r(d[6]).Text,null,"Here is the cropped image:"),r(d[7]).createElement(r(d[6]).Image,{source:{uri:this.state.croppedImageURI},style:[n.imageCropper,this.state.measuredSize]}),r(d[7]).createElement(r(d[6]).TouchableHighlight,{style:n.cropButtonTouchable,onPress:this._reset.bind(this)},r(d[7]).createElement(r(d[6]).View,{style:n.cropButton},r(d[7]).createElement(r(d[6]).Text,{style:n.cropButtonLabel},"Try again"))))}},{key:"_crop",value:function(){var t=this;r(d[6]).ImageEditor.cropImage(this.state.randomPhoto.uri,this._transformData,function(o){return t.setState({croppedImageURI:o})},function(o){return t.setState({cropError:o})})}},{key:"_reset",value:function(){this.setState({randomPhoto:null,croppedImageURI:null,cropError:null}),this._fetchRandomPhoto()}}]),s})(r(d[7]).Component),o=(function(t){function o(){return r(d[1])(this,o),r(d[2])(this,r(d[3])(o).apply(this,arguments))}return r(d[0])(o,t),r(d[4])(o,[{key:"UNSAFE_componentWillMount",value:function(){var t=this.props.image.width/this.props.size.width,o=this.props.image.height/this.props.size.height;this._horizontal=t>o,this._horizontal?this._scaledImageSize={width:this.props.image.width/o,height:this.props.size.height}:(this._scaledImageSize={width:this.props.size.width,height:this.props.image.height/t},this._scaledImageSize.width*=2,this._scaledImageSize.height*=2,this._horizontal=!0),this._contentOffset={x:(this._scaledImageSize.width-this.props.size.width)/2,y:(this._scaledImageSize.height-this.props.size.height)/2},this._maximumZoomScale=Math.min(this.props.image.width/this._scaledImageSize.width,this.props.image.height/this._scaledImageSize.height),this._minimumZoomScale=Math.max(this.props.size.width/this._scaledImageSize.width,this.props.size.height/this._scaledImageSize.height),this._updateTransformData(this._contentOffset,this._scaledImageSize,this.props.size)}},{key:"_onScroll",value:function(t){this._updateTransformData(t.nativeEvent.contentOffset,t.nativeEvent.contentSize,t.nativeEvent.layoutMeasurement)}},{key:"_updateTransformData",value:function(t,o,n){var s=t.x/o.width,h=t.y/o.height,l=n.width/o.width,c=n.height/o.height,u={offset:{x:this.props.image.width*s,y:this.props.image.height*h},size:{width:this.props.image.width*l,height:this.props.image.height*c}};this.props.onTransformDataChange&&this.props.onTransformDataChange(u)}},{key:"render",value:function(){return r(d[7]).createElement(r(d[6]).ScrollView,{alwaysBounceVertical:!0,automaticallyAdjustContentInsets:!1,contentOffset:this._contentOffset,decelerationRate:"fast",horizontal:this._horizontal,maximumZoomScale:this._maximumZoomScale,minimumZoomScale:this._minimumZoomScale,onMomentumScrollEnd:this._onScroll.bind(this),onScrollEndDrag:this._onScroll.bind(this),showsHorizontalScrollIndicator:!1,showsVerticalScrollIndicator:!1,style:this.props.style,scrollEventThrottle:16},r(d[7]).createElement(r(d[6]).Image,{source:this.props.image,style:this._scaledImageSize}))}}]),o})(r(d[7]).Component),n=r(d[6]).StyleSheet.create({container:{flex:1,alignSelf:'stretch'},imageCropper:{alignSelf:'center',marginTop:12},cropButtonTouchable:{alignSelf:'center',marginTop:12},cropButton:{padding:12,backgroundColor:'blue',borderRadius:4},cropButtonLabel:{color:'white',fontSize:16,fontWeight:'500'}});e.framework='React',e.title='ImageEditor',e.description='Cropping and scaling with ImageEditor',e.examples=[{title:'Image Cropping',render:function(){return r(d[7]).createElement(t,null)}}]},666770,[614,616,617,620,621,682,516,514]);