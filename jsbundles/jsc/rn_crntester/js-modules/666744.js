__d(function(g,r,i,a,m,e,d){'use strict';var t=(function(t){function n(){return r(d[1])(this,n),r(d[2])(this,r(d[3])(n).apply(this,arguments))}return r(d[0])(n,t),r(d[4])(n,[{key:"render",value:function(){return r(d[5]).createElement(r(d[6]).View,null,r(d[5]).createElement(r(d[6]).View,{onAccessibilityTap:function(){return r(d[6]).Alert.alert('Alert','onAccessibilityTap success')},accessible:!0},r(d[5]).createElement(r(d[6]).Text,null,"Accessibility normal tap example")),r(d[5]).createElement(r(d[6]).View,{onMagicTap:function(){return r(d[6]).Alert.alert('Alert','onMagicTap success')},accessible:!0},r(d[5]).createElement(r(d[6]).Text,null,"Accessibility magic tap example")),r(d[5]).createElement(r(d[6]).View,{onAccessibilityEscape:function(){return alert('onAccessibilityEscape success')},accessible:!0},r(d[5]).createElement(r(d[6]).Text,null,"Accessibility escape example")),r(d[5]).createElement(r(d[6]).View,{accessibilityLabel:"Some announcement",accessible:!0},r(d[5]).createElement(r(d[6]).Text,null,"Accessibility label example")),r(d[5]).createElement(r(d[6]).View,{accessibilityRole:"button",accessibilityStates:['selected'],accessible:!0},r(d[5]).createElement(r(d[6]).Text,null,"Accessibility traits example")),r(d[5]).createElement(r(d[6]).Text,null,"Text's accessibilityLabel is the raw text itself unless it is set explicitly."),r(d[5]).createElement(r(d[6]).Text,{accessibilityLabel:"Test of accessibilityLabel",accessible:!0},"This text component's accessibilityLabel is set explicitly."),r(d[5]).createElement(r(d[6]).View,{accessibilityLabel:"Test of accessibilityHint",accessibilityHint:"The hint provides more info than the label does",accessible:!0},r(d[5]).createElement(r(d[6]).Text,null,"This view component has both an accessibilityLabel and an accessibilityHint explicitly set.")),r(d[5]).createElement(r(d[6]).Text,{accessibilityLabel:"Test of accessibilityHint",accessibilityHint:"The hint provides more info than the label does"},"This text component has both an accessibilityLabel and an accessibilityHint explicitly set."),r(d[5]).createElement(r(d[6]).TouchableOpacity,{accessibilityLabel:"Test of accessibilityHint",accessibilityHint:"The hint provides more info than the label does"},r(d[5]).createElement(r(d[6]).View,null,r(d[5]).createElement(r(d[6]).Text,null,"This button has both an accessibilityLabel and an accessibilityHint explicitly set."))),r(d[5]).createElement(r(d[6]).View,{accessibilityElementsHidden:!0},r(d[5]).createElement(r(d[6]).Text,null,"This view's children are hidden from the accessibility tree")))}}]),n})(r(d[5]).Component),n=(function(t){function n(){var t,l;r(d[1])(this,n);for(var c=arguments.length,s=new Array(c),o=0;o<c;o++)s[o]=arguments[o];return(l=r(d[2])(this,(t=r(d[3])(n)).call.apply(t,[this].concat(s)))).state={screenReaderEnabled:!1},l._handleScreenReaderToggled=function(t){l.setState({screenReaderEnabled:t})},l}return r(d[0])(n,t),r(d[4])(n,[{key:"componentDidMount",value:function(){var t=this;r(d[6]).AccessibilityInfo.addEventListener('change',this._handleScreenReaderToggled),r(d[6]).AccessibilityInfo.fetch().done(function(n){t.setState({screenReaderEnabled:n})})}},{key:"componentWillUnmount",value:function(){r(d[6]).AccessibilityInfo.removeEventListener('change',this._handleScreenReaderToggled)}},{key:"render",value:function(){return r(d[5]).createElement(r(d[6]).View,null,r(d[5]).createElement(r(d[6]).Text,null,"The screen reader is",' ',this.state.screenReaderEnabled?'enabled':'disabled',"."))}}]),n})(r(d[5]).Component);e.title='AccessibilityIOS',e.description="Interface to show iOS' accessibility samples",e.examples=[{title:'Accessibility elements',render:function(){return r(d[5]).createElement(t,null)}},{title:'Check if the screen reader is enabled',render:function(){return r(d[5]).createElement(n,null)}}]},666744,[614,616,617,620,621,514,516]);