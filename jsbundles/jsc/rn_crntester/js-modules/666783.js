__d(function(g,r,i,a,m,e,d){'use strict';var t=(function(t){function n(){return r(d[1])(this,n),r(d[2])(this,r(d[3])(n).apply(this,arguments))}return r(d[0])(n,t),r(d[4])(n,[{key:"render",value:function(){var t=r(d[5])('UpdatePropertiesExampleView');return r(d[6]).createElement(r(d[7]).View,{style:o.container},r(d[6]).createElement(r(d[7]).Text,{style:o.text},"Press the button to update the field below by passing new properties to the RN app."),r(d[6]).createElement(t,{style:o.nativeView},r(d[6]).createElement(r(d[7]).Text,{style:o.text},"Error: This demo is accessible only from RNTester app")))}}]),n})(r(d[6]).Component),n=(function(t){function n(){return r(d[1])(this,n),r(d[2])(this,r(d[3])(n).apply(this,arguments))}return r(d[0])(n,t),r(d[4])(n,[{key:"render",value:function(){var t=r(d[5])('FlexibleSizeExampleView');return r(d[6]).createElement(r(d[7]).View,{style:o.container},r(d[6]).createElement(r(d[7]).Text,{style:o.text},"Press the button to resize it. On resize, RCTRootViewDelegate is notified. You can use it to handle content size updates."),r(d[6]).createElement(t,{style:o.nativeView},r(d[6]).createElement(r(d[7]).Text,{style:o.text},"Error: This demo is accessible only from RNTester app")))}}]),n})(r(d[6]).Component),o=r(d[7]).StyleSheet.create({container:{flex:1,backgroundColor:'#F5FCFF'},text:{marginBottom:20},nativeView:{height:140,width:280}});e.title='RCTRootView',e.description='Examples that show useful methods when embedding React Native in a native application',e.examples=[{title:'Updating app properties in runtime',render:function(){return r(d[6]).createElement(t,null)}},{title:"RCTRootView's size flexibility",render:function(){return r(d[6]).createElement(n,null)}}]},666783,[614,616,617,620,621,696,514,516]);